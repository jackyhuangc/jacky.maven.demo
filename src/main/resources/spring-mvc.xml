<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 使用spring mvc 配置注解驱动的Spring MVC Controller 的编程模型.注:次标签只在 Servlet MVC工作! -->
	<mvc:annotation-driven>
		<!-- 解决@ResponseBody中文乱码 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
				<!-- 用于避免响应头过大 -->
				<property name="writeAcceptCharset" value="false" />
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="com.fasterxml.jackson.databind.ObjectMapper">
						<property name="dateFormat">
							<bean class="java.text.SimpleDateFormat">
								<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
							</bean>
						</property>
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- 扫描注解组件并且自动的注入spring beans中.例如,他会扫描@Controller 和@Service下的文件.所以确保此base-package设置正确. -->
	<context:component-scan base-package="com" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 对静态资源文件的访问 -->
	<mvc:resources mapping="/images/**" location="/WEB-INF/images/" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/js/" />
	<mvc:resources mapping="/css/**" location="/WEB-INF/css/" />
	<mvc:resources mapping="/fonts/**" location="/WEB-INF/fonts/" />

	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/*" /> 拦截/ 
		/test /login 等等单层结构的请求 <mvc:mapping path="/**/*.do" />拦截后缀为 .do的请求 <mvc:exclude-mapping 
		path="/login" /> <mvc:exclude-mapping path="/signIn" /> <mvc:exclude-mapping 
		path="/register" /> <mvc:exclude-mapping path="/home/account.do" /> <bean 
		class="com.xujj.SecurityInterceptor"> </bean> </mvc:interceptor> </mvc:interceptors> -->

	<!-- Aop切面编程的配置 ,为了启用 Spring 对 @AspectJ 方面配置的支持，并保证 Spring 容器中的目标 Bean 被一个或多个方面自动增强，必须在 
		Spring 配置文件中添加如下配置 -->
	<aop:aspectj-autoproxy expose-proxy="true"></aop:aspectj-autoproxy>
	<bean id="logAopAction" class="com.jacky.utils.aop.LogAopAction"></bean>

	<!-- <bean id="springBean" name="springBean" class="com.jacky.mvc.account.SpringBean"> 
		<constructor-arg value="The beatles" /> <property name="test1" value="xxx"/> 
		<property name="test2" value="1"/> </bean> -->


	<bean id="assignment" class="com.jacky.mvc.account.Assignment">
		<!-- <constructor-arg name="test1" value="XML装配的数据(构造函数)" /> <constructor-arg 
			name="test2" value="111" /> -->

		<property name="test1" value="XML装配的数据" />
		<property name="test2" value="111" />
	</bean>
	<bean id="module" class="com.jacky.mvc.account.Module">
		<property name="assignment" ref="assignment" />
	</bean>
	<bean id="course" name="course_x" class="com.jacky.mvc.account.Course">
		<property name="module" ref="module" />
	</bean>

	<!-- 可通过autowire="byType"实现类型的自动装配，否则就通过手工设置ref属性来进行装配bean -->
	<!-- <bean id="course" name="course_x" class="com.jacky.mvc.account.Course" 
		autowire="byType"> </bean> -->
</beans>